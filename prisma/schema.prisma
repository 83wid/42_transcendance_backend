generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model conversation {
  id           Int                @id @default(autoincrement())
  name         String             @unique @db.VarChar(255)
  type         conversation_type? @default(DIRECT)
  direct       Boolean?           @default(true)
  group_member group_member[]     @ignore
  message      message[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model group_member {
  user_id         Int          @default(autoincrement())
  conversation_id Int          @default(autoincrement())
  joint_date      DateTime?    @default(now()) @db.Timestamp(6)
  left_date       DateTime?    @db.Timestamp(6)
  conversation    conversation @relation(fields: [conversation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users           users        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@ignore
}

model message {
  id              Int          @id @default(autoincrement())
  sender_id       Int          @default(autoincrement())
  content         String
  conversation_id Int          @default(autoincrement())
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  read_by         Int[]
  delivered_to    Int[]
  conversation    conversation @relation(fields: [conversation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users           users        @relation(fields: [sender_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id           Int            @id @default(autoincrement())
  intra_id     String         @unique
  username     String         @unique @db.VarChar(255)
  email        String         @unique @db.VarChar(255)
  first_name   String         @db.VarChar(255)
  last_name    String         @db.VarChar(255)
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  updated_at   DateTime?      @default(now()) @db.Timestamp(6)
  img_url      String?        @db.VarChar(255)
  achivements  Int[]
  group_member group_member[] @ignore
  message      message[]
}

enum conversation_type {
  DIRECT
  GROUP
}

enum game_diff {
  EASY
  NORMAL
  DIFFICULT
}

enum level_type {
  BRONZE
  SILVER
  GOLD
  PLATINUM
}
